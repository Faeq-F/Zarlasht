@misc{pandey_peer--peer_2022,
  title    = {Peer-to-peer vs client-server architecture for multiplayer games},
  author   = {Pandey, Harsh},
  url      = {https://blog.hathora.dev/peer-to-peer-vs-client-server-architecture/},
  abstract = {An important decision developers have to decide up front when developing a multiplayer game is whether to use a peer-to-peer architecture or a client-server architecture.},
  language = {en},
  journal  = {Hathora},
  month    = may,
  year     = {2022},
  note     = {Available at \url{https://blog.hathora.dev/peer-to-peer-vs-client-server-architecture/} }
}

@misc{franchetti_coping_2020,
  title    = {Coping with quarantine by coding},
  url      = {https://jofranchetti.medium.com/coping-with-quarantine-by-coding-597372a17746},
  abstract = {Building web games to bring my remote friends together},
  language = {en},
  journal  = {Medium},
  author   = {Franchetti, Jo},
  month    = sep,
  year     = {2020},
  note     = {Available at \url{https://jofranchetti.medium.com/coping-with-quarantine-by-coding-597372a17746}}
}

@article{reis_fun_2017,
  title    = {Fun is more fun when others are involved},
  volume   = {12},
  issn     = {1743-9760, 1743-9779},
  url      = {https://www.tandfonline.com/doi/full/10.1080/17439760.2016.1221123},
  doi      = {10.1080/17439760.2016.1221123},
  language = {en},
  number   = {6},
  journal  = {The Journal of Positive Psychology},
  author   = {Reis, Harry T. and O’Keefe, Stephanie D. and Lane, Richard D.},
  month    = nov,
  year     = {2017},
  pages    = {547--557}
}


@article{garaigordobil_developing_2022,
  title      = {Developing {Children}’s {Creativity} and {Social}-{Emotional} {Competencies} through {Play}: {Summary} of {Twenty} {Years} of {Findings} of the {Evidence}-{Based} {Interventions} “{Game} {Program}”},
  volume     = {10},
  copyright  = {https://creativecommons.org/licenses/by/4.0/},
  issn       = {2079-3200},
  shorttitle = {Developing {Children}’s {Creativity} and {Social}-{Emotional} {Competencies} through {Play}},
  url        = {https://www.mdpi.com/2079-3200/10/4/77},
  doi        = {10.3390/jintelligence10040077},
  abstract   = {This work presents the results of four cooperative-creative game programs (Game Programs). In all four studies, experimental designs with repeated pretest-posttest measures and control groups were used. Validation samples ranged from 86 to 178 participants, randomly assigning participants to the experimental and control conditions. Before and after each program, a battery of assessment instruments was applied to measure the variables under study. The intervention consists of conducting a weekly game session during the school year. The results of the posttest covariance analyses confirmed a significant impact: (1) in social development, by increasing various positive social behaviors and decreasing many negative social behaviors; by increasing assertive cognitive strategies and prosocial resolution of interpersonal problems; and by enhancing relationships and positive communication among group members; (2) in emotional development, by improving self-concept, peer image, and emotional stability; and (3) in cognitive development, by increasing verbal intelligence, verbal and graphic-figurative creativity, as well as creative personality behaviors and traits. This work provides empirical evidence of the relevance of cooperative-creative play in child development.},
  language   = {en},
  number     = {4},
  journal    = {Journal of Intelligence},
  author     = {Garaigordobil, Maite and Berrueco, Laura and Celume, Macarena-Paz},
  month      = oct,
  year       = {2022},
  pages      = {77}
}

@misc{debenedetto_elixir_2019,
  title      = {Elixir and {The} {Beam}: {How} {Concurrency} {Really} {Works}},
  shorttitle = {Elixir and {The} {Beam}},
  url        = {https://medium.com/flatiron-labs/elixir-and-the-beam-how-concurrency-really-works-3cc151cddd61},
  abstract   = {What actually makes Elixir concurrent? To find out, we need to understand OTP and the Erlang VM.},
  language   = {en},
  journal    = {Flatiron Labs},
  author     = {DeBenedetto, Sophie},
  month      = dec,
  year       = {2019},
  note       = {Available at \url{https://medium.com/flatiron-labs/elixir-and-the-beam-how-concurrency-really-works-3cc151cddd61}}
}

@book{stenman_erlang_2024,
  author = {Stenman, Erik},
  title  = {The {Erlang} {Runtime} {System}},
  url    = {https://blog.stenmans.org/theBeamBook/#CH-Processes},
  year   = {2024},
  note   = {Available at \url{https://blog.stenmans.org/theBeamBook/#CH-Processes}}
}

@article{armstrong_making_2003,
  title    = {Making reliable distributed systems in the presence of software errors},
  url      = {https://urn.kb.se/resolve?urn=urn:nbn:se:ri:diva-22455},
  abstract = {The work described in this thesis is the result of a research program started in 1981 to find better ways of programming Telecom applications. These applications are large programs which despite ca ...},
  language = {eng},
  author   = {Armstrong, Joe},
  year     = {2003}
}

@thesis{berladean_effect_2016,
  author = {Berladean, Vadim},
  title  = {The effect of multiplayer mode on users’ immersion and enjoyment in mobile games},
  school = {Aalborg Universitet},
  year   = 2016
}


@article{gupta_overview_2018,
  title    = {An Overview of Web Sockets: The future of Real-Time Communication},
  volume   = {5},
  issn     = {2395-0056, 2395-0072},
  url      = {https://www.irjet.net/archives/V5/i12/IRJET-V5I1283.pdf},
  language = {en},
  number   = {12},
  journal  = {International Research Journal of Engineering and Technology (IRJET)},
  author   = {Gupta, Bhumij and Dr. Vani, M.P. },
  month    = dec,
  year     = {2018},
  pages    = {434--437}
}

@article{Ari_crss_nodate,
  author = {Ari, Ismail and Hong, Bo and Miller, Ethan L. and Brandt, Scott A. and Long, Darrell D. E.},
  title  = {{CRSS} publication: {Managing} flash crowds on the {Internet}},
  url    = {https://www.ssrc.us/Papers/ari-mascots03.pdf},
  note   = {Available at \url{https://web.archive.org/web/20130509180859/http://www.ssrc.ucsc.edu/Papers/ari-mascots03.pdf}}
}


@misc{jobert_story_2017,
  title    = {Story of a {Reddit} {Hug} of {Death} and {Lessons} {Learned}},
  url      = {https://medium.com/codingame/story-of-a-reddit-hug-of-death-and-lessons-learned-3565bb8a6793},
  abstract = {Last Monday afternoon, a link to CodinGame was posted on reddit. It gained a lot of success and resulted in what is called a hug of death…},
  language = {en},
  journal  = {CodinGame},
  author   = {Jobert, Thibaud},
  month    = nov,
  year     = {2017}
}


@misc{noauthor_chapter_2024,
  title      = {Chapter 3. {Designing} function signatures and types · {Functional} {Programming} in {C}\#: {How} to write better {C}\# code},
  shorttitle = {Chapter 3. {Designing} function signatures and types · {Functional} {Programming} in {C}\#},
  url        = {https://livebook.manning.com/book/functional-programming-in-c-sharp/chapter-3},
  abstract   = {Well-designed function signatures · Fine-grained control over the inputs to a function · Using Option to represent the possible absence of data},
  language   = {en-US},
  author     = {Manning Publications Co.},
  year       = {2024}
}

@misc{Wlaschin_functional_2014,
  title  = {Functional Programming Patterns (NDC London 2014) },
  author = { Wlaschin, Scott},
  note   = {Slides for the talk are available at \url{https://fsharpforfunandprofit.com/fppatterns/}},
  year   = {2014}
}


@inproceedings{politowski_survey_2021,
  address   = {Madrid, Spain},
  title     = {A {Survey} of {Video} {Game} {Testing}},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn      = {9781665435673},
  url       = {https://ieeexplore.ieee.org/document/9463010/},
  doi       = {10.1109/AST52587.2021.00018},
  booktitle = {2021 {IEEE}/{ACM} {International} {Conference} on {Automation} of {Software} {Test} ({AST})},
  publisher = {IEEE},
  author    = {Politowski, Cristiano and Petrillo, Fabio and Gueheneuc, Yann-Gael},
  month     = may,
  year      = {2021},
  pages     = {90--99}
}


@misc{noauthor_chrobot_nodate,
  title    = {chrobot · v3.0.3 - A browser automation tool and interface to the Chrome DevTools Protocol.},
  url      = {https://hexdocs.pm/chrobot/},
  abstract = {A browser automation tool and interface to the Chrome DevTools Protocol.},
  note     = {\url{https://hexdocs.pm/chrobot/}}
}


@misc{noauthor_htmx_ws_nodate,
  title    = {{\textless}/{\textgreater} htmx {\textasciitilde} {The} htmx {Web} {Socket} extension {Extension}},
  url      = {https://htmx.org/extensions/ws/},
  abstract = {htmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext
              
              htmx is small ({\textasciitilde}14k min.gz’d), dependency-free, extendable, IE11 compatible \& has reduced code base sizes by 67\% when compared with react}
}

@misc{noauthor_htmx_nodate,
  title    = {{\textless}/{\textgreater} htmx - high power tools for html},
  url      = {https://htmx.org/},
  abstract = {htmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext
              
              htmx is small ({\textasciitilde}14k min.gz’d), dependency-free, extendable, IE11 compatible \& has reduced code base sizes by 67\% when compared with react}
}


@misc{yang_c_nodate,
  title    = {C, {Erlang}, {Java} and {Go} {Web} {Server} performance test – by {Tim} {Yang}},
  url      = {https://timyang.net/programming/c-erlang-java-performance/},
  abstract = {I had tested a hello world web server in C, Erlang, Java and the Go programming language. * C, use the well-known high performance web server nginx, with a hello world nginx module * Erlang/OTP * Java, using the MINA 2.0 framework, now the JBoss Netty framework. * Go, http://golang.org/},
  language = {en-US},
  author   = {Yang, Tim}
}


@misc{noauthor_scale_nodate,
  title    = {Scale with {Redis} {Cluster}},
  url      = {https://redis.io/docs/latest/operate/oss_and_stack/management/scaling/},
  abstract = {Horizontal scaling with Redis Cluster},
  language = {en}
}

@misc{noauthor_callback_nodate,
  title = {Callback {Hell}},
  url   = {http://callbackhell.com/}
}


@inproceedings{lange_empirical_2019,
  address   = {Hangzhou, China},
  title     = {An {Empirical} {Study} of {Messaging} {Passing} {Concurrency} in {Go} {Projects}},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn      = {9781728105918},
  url       = {https://ieeexplore.ieee.org/document/8668036/},
  doi       = {10.1109/SANER.2019.8668036},
  booktitle = {2019 {IEEE} 26th {International} {Conference} on {Software} {Analysis}, {Evolution} and {Reengineering} ({SANER})},
  publisher = {IEEE},
  author    = {Lange, Julien and Dilley, Nicolas },
  month     = feb,
  year      = {2019},
  pages     = {377--387}
}


@article{bianchi_survey_2018,
  title     = {A {Survey} of {Recent} {Trends} in {Testing} {Concurrent} {Software} {Systems}},
  volume    = {44},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  issn      = {0098-5589, 1939-3520, 2326-3881},
  url       = {https://ieeexplore.ieee.org/document/7932530/},
  doi       = {10.1109/TSE.2017.2707089},
  abstract  = {Many modern software systems are composed of multiple execution flows that run simultaneously, spanning from applications designed to exploit the power of modern multi-core architectures to distributed systems consisting of multiple components deployed on different physical nodes. We collectively refer to such systems as concurrent systems. Concurrent systems are difficult to test, since the faults that derive from their concurrent nature depend on the interleavings of the actions performed by the individual execution flows. Testing techniques that target these faults must take into account the concurrency aspects of the systems. The increasingly rapid spread of parallel and distributed architectures led to a deluge of concurrent software systems, and the explosion of testing techniques for such systems in the last decade. The current lack of a comprehensive classification, analysis and comparison of the many testing techniques for concurrent systems limits the understanding of the strengths and weaknesses of each approach and hampers the future advancements in the field. This survey provides a framework to capture the key features of the available techniques to test concurrent software systems, identifies a set of classification criteria to review and compare the available techniques, and discusses in details their strengths and weaknesses, leading to a thorough assessment of the field and paving the road for future progresses.},
  number    = {8},
  journal   = {IEEE Transactions on Software Engineering},
  author    = {Bianchi, Francesco Adalberto and Margara, Alessandro and Pezze, Mauro},
  month     = aug,
  year      = {2018},
  pages     = {747--783}
}

@article{namiot_js_2015,
  title   = {JavaScript Concurrency Models},
  url     = {https://www.researchgate.net/publication/277142025_JavaScript_Concurrency_Models},
  author  = {Namiot, Dmitry and Sukhomlin, Vladimir},
  month   = jan,
  year    = {2015},
  journal = {International Journal of Open Information Technologies ISSN: 2307-8162 vol. 3, no. 6, 2015 },
  pages   = {21--24}
}


@inproceedings{zhao_concurrency_2021,
  address   = {New York, NY, USA},
  series    = {{SLE} 2021},
  title     = {A concurrency model for {JavaScript} with cooperative cancellation},
  isbn      = {9781450391115},
  url       = {https://dl.acm.org/doi/10.1145/3486608.3486911},
  doi       = {10.1145/3486608.3486911},
  abstract  = {This paper proposes a concurrency model for JavaScript with thread-like abstractions and cooperative cancellation. JavaScript uses an event-driven model, where an active computation runs until it completes or blocks for an event while concurrent computations wait for other events as callbacks. With the introduction of Promises, the control flow of callbacks can be written in a more direct style. However, the event-based model is still a source of confusion with regard to execution order, race conditions, and termination.  The thread model is a familiar concept to programmers and can help reduce concurrency errors in JavaScript programs. This work is a library-based design, which uses an abstraction based on the reader monad to pass a thread ID through a thread's computation. A thread can be cancelled, paused, and resumed with its thread ID. This design allows hierarchical cancellation where a child thread is cancelled if its parent is cancelled. It also defines synchronization primitives to protect shared states. A formal semantics is included to give a precise definition of the proposed model.},
  booktitle = {Proceedings of the 14th {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}},
  publisher = {Association for Computing Machinery},
  author    = {Zhao, Tian and Li, Yonglun},
  month     = nov,
  year      = {2021},
  pages     = {55--67}
}


@article{belson_survey_2019,
  title     = {A {Survey} of {Asynchronous} {Programming} {Using} {Coroutines} in the {Internet} of {Things} and {Embedded} {Systems}},
  copyright = {arXiv.org perpetual, non-exclusive license},
  url       = {https://arxiv.org/abs/1906.00367},
  doi       = {10.48550/ARXIV.1906.00367},
  abstract  = {Many Internet of Things and embedded projects are event-driven, and therefore require asynchronous and concurrent programming. Current proposals for C++20 suggest that coroutines will have native language support. It is timely to survey the current use of coroutines in embedded systems development. This paper investigates existing research which uses or describes coroutines on resource-constrained platforms. The existing research is analysed with regard to: software platform, hardware platform and capacity; use cases and intended benefits; and the application programming interface design used for coroutines. A systematic mapping study was performed, to select studies published between 2007 and 2018 which contained original research into the application of coroutines on resource-constrained platforms. An initial set of 566 candidate papers were reduced to only 35 after filters were applied, revealing the following taxonomy. The C \&amp; C++ programming languages were used by 22 studies out of 35. As regards hardware, 16 studies used 8- or 16-bit processors while 13 used 32-bit processors. The four most common use cases were concurrency (17 papers), network communication (15), sensor readings (9) and data flow (7). The leading intended benefits were code style and simplicity (12 papers), scheduling (9) and efficiency (8). A wide variety of techniques have been used to implement coroutines, including native macros, additional tool chain steps, new language features and non-portable assembly language. We conclude that there is widespread demand for coroutines on resource-constrained devices. Our findings suggest that there is significant demand for a formalised, stable, well-supported implementation of coroutines in C++, designed with consideration of the special needs of resource-constrained devices, and further that such an implementation would bring benefits specific to such devices.},
  author    = {Belson, Bruce and Holdsworth, Jason and Xiang, Wei and Philippa, Bronson},
  year      = {2019},
  keywords  = {Software Engineering (cs.SE), Programming Languages (cs.PL), FOS: Computer and information sciences, FOS: Computer and information sciences}
}



@misc{noauthor_event_2024,
  title    = {The event loop - {JavaScript} {\textbar} {MDN}},
  url      = {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop},
  abstract = {JavaScript has a runtime model based on an event loop, which is responsible for executing the code, collecting and processing events, and executing queued sub-tasks. This model is quite different from models in other languages like C and Java.},
  language = {en-US},
  month    = oct,
  year     = {2024}
}


@misc{noauthor_introconcurrency_nodate,
  title = {Introduction to Concurrency},
  url   = {https://cs.lmu.edu/~ray/notes/introconcurrency/},
  note  = {Available at \url{https://cs.lmu.edu/~ray/notes/introconcurrency/}}
}


@article{armstrong_erlang_2010,
  title    = {Erlang},
  volume   = {53},
  issn     = {0001-0782, 1557-7317},
  url      = {https://dl.acm.org/doi/10.1145/1810891.1810910},
  doi      = {10.1145/1810891.1810910},
  abstract = {The same component isolation that made it effective for large distributed telecom systems makes it effective for multicore CPUs and networked applications.},
  language = {en},
  number   = {9},
  journal  = {Communications of the ACM},
  author   = {Armstrong, Joe},
  month    = sep,
  year     = {2010},
  pages    = {68--75}
}


@misc{noauthor_hitchhikers_nodate,
  title    = {The {Hitchhiker}'s {Guide} to {Concurrency} {\textbar} {Learn} {You} {Some} {Erlang} for {Great} {Good}!},
  url      = {https://learnyousomeerlang.com/the-hitchhikers-guide-to-concurrency},
  abstract = {The basic concepts behind Erlang's message passing architecture for writing fault-tolerant systems. How to spawn new processes, send and receive messages and a few examples.}
}


@misc{noauthor_steamworks_nodate,
  title = {Steamworks {API} {Overview} ({Steamworks} {Documentation})},
  url   = {https://partner.steamgames.com/doc/sdk/api},
  note  = {Available at \url{https://partner.steamgames.com/doc/sdk/api}}
}


@misc{noauthor_steam_nodate,
  title = {Steam {DRM} ({Steamworks} {Documentation})},
  url   = {https://partner.steamgames.com/doc/features/drm},
  note  = {Available at \url{https://partner.steamgames.com/doc/features/drm}}
}


@misc{noauthor_steam_nodate1,
  title    = {Steam {Labs}},
  url      = {https://store.steampowered.com/labs/},
  abstract = {A peek at some of the many experiments we put together around discoverability, video, machine learning, and more.},
  language = {en},
  note     = {Available at \url{https://store.steampowered.com/labs/}}
}


@misc{noauthor_isteamnetworkingsockets_nodate,
  title    = {{ISteamNetworkingSockets} {Interface} ({Steamworks} {Documentation})},
  url      = {https://partner.steamgames.com/doc/api/ISteamnetworkingSockets},
  language = {en},
  note     = {Available at \url{https://partner.steamgames.com/doc/api/ISteamnetworkingSockets}}
}

@misc{djundik_how_2017,
  title     = {How and why we moved graph storage to InfluxDB},
  author    = {Djundik, Pavel},
  note      = {Available at \url{https://steamdb.info/blog/graph-storage-influxdb/}},
  year      = {2017},
  month     = feb,
  publisher = {SteamDB}
}


@misc{simmons_decoding_2023,
  title    = {Decoding the {Programming} {Language} of {Steam}},
  url      = {https://stepofweb.com/steamcodinglanguage/},
  abstract = {Steam, the popular digital distribution platform for video games, primarily uses a combination of coding languages to power its functionality. The backend of Steam is built using a blend of...},
  language = {en-US},
  journal  = {Stepofweb},
  month    = nov,
  year     = {2024},
  author   = {Simmons, James}
}


@misc{erri120_erri120_egs-db_2024,
  title     = {erri120/egs-db},
  copyright = {EUPL-1.2},
  url       = {https://github.com/erri120/egs-db},
  abstract  = {Database for the Epic Games Store (similar to SteamDB and the GOG Database)},
  urldate   = {2024-12-10},
  author    = {{erri120}},
  month     = apr,
  year      = {2024},
  note      = {original-date: 2023-04-30T16:15:11Z},
  keywords  = {database, epic-games-store}
}


@misc{epic_games_jobs,
  title = {Careers at Epic Games},
  url   = {https://www.epicgames.com/site/en-US/careers/jobs?department=Engineering&product=Epic%20Online%20Services&page=1},
  note  = {Available at \url{https://www.epicgames.com/site/en-US/careers/jobs?department=Engineering&product=Epic%20Online%20Services&page=1}}
}

@misc{epic_games_dev_update,
  title = {Development Update: Self-Refund, Keyless Partner Integration and Changes to Ownership Authorization},
  url   = {https://store.epicgames.com/en-US/news/development-update-self-refund-keyless-partner-integration-and-changes-to-ownership-authorization},
  note  = {Available at \url{https://store.epicgames.com/en-US/news/development-update-self-refund-keyless-partner-integration-and-changes-to-ownership-authorization}},
  year  = {2020},
  month = may
}


@misc{spring_epic_2016,
  title    = {Epic {Games} {Forums} {Hacked}, {SQL} {Injection} {Vulnerability} {Blamed}},
  url      = {https://threatpost.com/epic-games-forums-hacked-sql-injection-vulnerability-blamed/120076/},
  abstract = {A SQL injection vulnerability is being blamed in the hack of 800,000 users accounts for popular gaming forums run by Epic Games.},
  language = {en},
  month    = aug,
  year     = {2016},
  author   = {Tom Spring}
}


@misc{kevinasgari_microsoft.xbox.services_nodate,
  title    = {Microsoft.{Xbox}.{Services} {Namespace}},
  url      = {https://learn.microsoft.com/en-us/dotnet/api/microsoft.xbox.services?view=xboxlive-dotnet-2017.11.20171204.01},
  abstract = {Contains classes, enumerations, and namespaces used for accessing the Xbox Live service.},
  language = {en-us},
  author   = {{KevinAsgari}}
}


@misc{m-stahl_sdk_2023,
  title    = {{SDK} \& tools requirements - {Microsoft} {Game} {Development} {Kit}},
  url      = {https://learn.microsoft.com/en-us/gaming/gdk/_content/gc/getstarted/overviews/sdk-and-tools},
  abstract = {Describes the SDKs and tools required on your development PC for developing titles with the Microsoft Game Development Kit (GDK).},
  language = {en-us},
  urldate  = {2024-12-10},
  author   = {{M-Stahl}},
  month    = nov,
  year     = {2023}
}


@misc{woolsey_how_2024,
  title    = {How {Hotpatching} on {Windows} {Server} is changing the game for {Xbox}},
  url      = {https://www.microsoft.com/en-us/windows-server/blog/2024/01/23/how-hotpatching-on-windows-server-is-changing-the-game-for-xbox/},
  abstract = {Hotpatch with Windows Server 2022 Azure Edition reduces downtime for SQL Server databases running on Windows Server Azure virtual machines. Learn more.},
  language = {en-US},
  urldate  = {2024-12-10},
  journal  = {Microsoft Windows Server Blog},
  author   = {Woolsey, Jeff, Orin Thomas},
  month    = jan,
  year     = {2024}
}


@article{gilbert_perspectives_2012,
  title     = {Perspectives on the {CAP} {Theorem}},
  volume    = {45},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  issn      = {0018-9162},
  url       = {http://ieeexplore.ieee.org/document/6122006/},
  doi       = {10.1109/MC.2011.389},
  number    = {2},
  urldate   = {2024-12-10},
  journal   = {Computer},
  author    = {Gilbert, Seth and Lynch, Nancy},
  month     = feb,
  year      = {2012},
  pages     = {30--36}
}
