
@misc{noauthor_alpine.js_nodate,
  title    = {Alpine.js},
  note     = {Available at \url{https://alpinejs.dev/}},
  abstract = {A rugged, minimal framework for composing behavior directly in your markup.},
  language = {en},
  urldate  = {2025-04-03},
  author   = {Porzio, Caleb}
}

@article{armstrong_erlang_2010,
  title    = {Erlang},
  volume   = {53},
  issn     = {0001-0782, 1557-7317},
  url      = {https://dl.acm.org/doi/10.1145/1810891.1810910},
  doi      = {10.1145/1810891.1810910},
  abstract = {The same component isolation that made it effective for large distributed telecom systems makes it effective for multicore CPUs and networked applications.},
  language = {en},
  number   = {9},
  journal  = {Communications of the ACM},
  author   = {Armstrong, Joe},
  month    = sep,
  year     = {2010},
  pages    = {68--75}
}

@misc{woolsey_how_2024,
  title    = {How {Hotpatching} on {Windows} {Server} is changing the game for {Xbox}},
  url      = {https://www.microsoft.com/en-us/windows-server/blog/2024/01/23/how-hotpatching-on-windows-server-is-changing-the-game-for-xbox/},
  abstract = {Hotpatch with Windows Server 2022 Azure Edition reduces downtime for SQL Server databases running on Windows Server Azure virtual machines. Learn more.},
  language = {en-US},
  journal  = {Microsoft Windows Server Blog},
  author   = {Woolsey, Jeff, Orin Thomas},
  month    = jan,
  year     = {2024}
}

@misc{patel_what_2019,
  title    = {What does the phrase {Monadic} {Bind} mean?},
  url      = {https://medium.com/@nitinpatel_20236/what-does-the-phrase-monadic-bind-mean-a2184f34b2e3},
  abstract = {An Intuitive Guide to Monads},
  language = {en},
  journal  = {Medium},
  author   = {Patel, Nitin},
  month    = jun,
  year     = {2019}
}

@misc{frost_making_2023,
  title    = {Making a multiplayer web game with websocket that can be scalable to millions of users},
  url      = {https://medium.com/@dragonblade9x/making-a-multiplayer-web-game-with-websocket-that-can-be-scalable-to-millions-of-users-923cc8bd4d3b},
  language = {en},
  journal  = {Medium},
  author   = {Frost, Sapphy},
  month    = mar,
  year     = {2023}
}


@misc{kevinasgari_microsoft.xbox.services_nodate,
  title    = {Microsoft.{Xbox}.{Services} {Namespace}},
  url      = {https://learn.microsoft.com/en-us/dotnet/api/microsoft.xbox.services?view=xboxlive-dotnet-2017.11.20171204.01},
  abstract = {Contains classes, enumerations, and namespaces used for accessing the Xbox Live service.},
  language = {en-us},
  author   = {{KevinAsgari}}
}


@misc{m-stahl_sdk_2023,
  title    = {{SDK} \& tools requirements - {Microsoft} {Game} {Development} {Kit}},
  url      = {https://learn.microsoft.com/en-us/gaming/gdk/_content/gc/getstarted/overviews/sdk-and-tools},
  abstract = {Describes the SDKs and tools required on your development PC for developing titles with the Microsoft Game Development Kit (GDK).},
  language = {en-us},
  urldate  = {2024-12-10},
  author   = {{M-Stahl}},
  month    = nov,
  year     = {2023}
}



@article{gilbert_perspectives_2012,
  title     = {Perspectives on the {CAP} {Theorem}},
  volume    = {45},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  issn      = {0018-9162},
  url       = {http://ieeexplore.ieee.org/document/6122006/},
  doi       = {10.1109/MC.2011.389},
  number    = {2},
  urldate   = {2024-12-10},
  journal   = {Computer},
  author    = {Gilbert, Seth and Lynch, Nancy},
  month     = feb,
  year      = {2012},
  pages     = {30--36}
}


@misc{GeeksforGeeks_pong_2021,
  title    = {Pong {Game} in {JavaScript}},
  url      = {https://www.geeksforgeeks.org/pong-game-in-javascript/},
  abstract = {A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.},
  language = {en-US},
  urldate  = {2024-12-12},
  journal  = {GeeksforGeeks},
  author   = {GeeksforGeeks},
  month    = feb,
  year     = {2021}
}


@article{department_of_information_systems_university_of_nizwa_sultanate_of_oman_study_2022,
  title      = {A {Study} of {Performance} and {Comparison} of {NoSQL} {Databases}: {MongoDB}, {Cassandra}, and {Redis} {Using} {YCSB}. Department of Information Systems, University of Nizwa.},
  volume     = {15},
  issn       = {09746846, 09745645},
  shorttitle = {A {Study} of {Performance} and {Comparison} of {NoSQL} {Databases}},
  url        = {https://indjst.org/articles/a-study-of-performance-and-comparison-of-nosql-databases-mongodb-cassandra-and-redis-using-ycsb},
  doi        = {10.17485/IJST/v15i31.1352},
  number     = {31},
  urldate    = {2024-12-12},
  journal    = {Indian Journal Of Science And Technology},
  author     = {Sultanate of Oman and Kausar, Mohammad Abu and Nasar, Mohammad and Soosaimanickam, Arockiasamy},
  month      = aug,
  year       = {2022},
  pages      = {1532--1540}
}


@misc{noauthor_example_nodate,
  title    = {Example of using mist.{Custom} · {Issue} \#54 · rawhat/mist},
  url      = {https://github.com/rawhat/mist/issues/54},
  abstract = {When handle\_ws\_message get mist.Custom as message. I want to broadcast message to all clients. How can I do it? I want to create public chat (Every client can send and receive)},
  language = {en},
  urldate  = {2024-12-13},
  journal  = {GitHub},
  note     = {Available at \url{https://github.com/rawhat/mist/issues/54}},
  author   = {{ Panicker, Bijin Regi}, {Manning, Alex} and {Reffo, Connell}}
}

@misc{noauthor_websockets_nodate,
  title    = {websockets by bgwdotdev · {Pull} {Request} \#72 · gleam-wisp/wisp},
  url      = {https://github.com/gleam-wisp/wisp/pull/72},
  abstract = {Here\&\#39;s a first pass, scrappy implementation of mists websockets into wisp. \#10
              Still figuring out if there\&\#39;s a better way to do this and discussing with rawhat a little on approaches.
              This ...},
  language = {en},
  urldate  = {2024-12-13},
  journal  = {GitHub},
  note     = {Available at \url{https://github.com/gleam-wisp/wisp/pull/72}},
  author   = {bgw and {Pilfold, Louis}}
}

@misc{reffo_connellr023/chatter-reborn_2024,
  title     = {connellr023/chatter-reborn},
  copyright = {MIT},
  url       = {https://github.com/connellr023/chatter-reborn},
  abstract  = {A massively concurrent chat application designed for real-time, one-on-one conversations.},
  urldate   = {2024-12-13},
  author    = {Reffo, Connell},
  month     = oct,
  year      = {2024},
  keywords  = {functional-programming, actor-model, concurrent-programming, mist, socket-programming, realtime-chat, gleam},
  note      = {Available at \url{https://github.com/connellr023/chatter-reborn}}
}


@misc{noauthor_ai_nodate,
  title    = {{Voice} {Generator} \& {Text} to {Speech}},
  url      = {https://elevenlabs.io},
  abstract = {Rated the best text to speech (TTS) software online.},
  language = {en},
  urldate  = {2024-12-13},
  journal  = {ElevenLabs},
  author   = {ElevenLabs},
  note     = {Available at \url{https://elevenlabs.io}}
}



@misc{noauthor_saga_nodateaws,
  title    = {Saga pattern - {AWS} {Prescriptive} {Guidance}},
  url      = {https://docs.aws.amazon.com/prescriptive-guidance/latest/modernization-data-persistence/saga-pattern.html},
  abstract = {The saga pattern is a failure management pattern that helps establish consistency in distributed applications, and coordinates transactions between multiple microservices to maintain data consistency. A microservice publishes an event for every transaction, and the next transaction is initiated based on the event's outcome. It can take two different paths, depending on the success or failure of the transactions.},
  urldate  = {2025-04-03},
  author   = {Amazon Web Services Inc.}
}


@article{kumar_survey_2012,
  title      = {Survey on {Transport} {Layer} {Protocols}: {TCP} \& {UDP}},
  volume     = {46},
  shorttitle = {Survey on {Transport} {Layer} {Protocols}},
  url        = {https://ijcaonline.org/archives/volume46/number7/6920-9285/},
  abstract   = {This paper presents a comprehensive survey on the two most popular transport layer protocols; TCP and UDP. The aim is to understand the key terminologies of TCP and UDP and to understand the key differences between them. This paper lists out the functions and basic operation of both protocols },
  language   = {en},
  number     = {7},
  urldate    = {2025-04-03},
  journal    = {International Journal of Computer Applications},
  author     = {Kumar, Santosh and Rai, Sonam},
  month      = may,
  year       = {2012},
  pages      = {20--25}
}


@misc{noauthor_point--point_nodate,
  title    = {Point-to-point messaging},
  url      = {https://eda-visuals.boyney.io/visuals/point-to-point-messaging},
  abstract = {Communicate with messages and channels},
  language = {en},
  urldate  = {2025-04-03},
  author   = {Boyne, David}
}


@misc{noauthor_what_pubsub,
  title      = {What is {Pub}/{Sub}? {\textbar} {Pub}/{Sub} {Documentation}},
  shorttitle = {What is {Pub}/{Sub}?},
  url        = {https://cloud.google.com/pubsub/docs/overview},
  abstract   = {Understand how Pub/Sub works and the different terms associated with Pub/Sub},
  language   = {en},
  urldate    = {2025-04-03},
  journal    = {Google Cloud},
  author     = {Google Cloud}
}


@misc{noauthor_fully_nodate,
  title    = {Sony Interactive Entertainment - Fully {Automated} {Kubernetes} {Operations}},
  url      = {https://sonyinteractive.com/en/innovation/technology/research-academia/research/fully-automated-kubernetes-operations/},
  abstract = {Welcome to the new era of fully automated Kubernetes operations at PSN, where teams can now focus on what matters most while the platform takes care of itself.},
  language = {en-US},
  urldate  = {2025-04-03},
  journal  = {Sony Interactive Entertainment},
  author   = {Somanchi, Swathi and Kameswaran, Rajesh},
  month    = jan,
  year     = {2025}
}


@misc{noauthor_why_nodate,
  title   = {Why is {Kubernetes} {So} {Damn} {Complicated}?},
  url     = {https://www.appvia.io/blog/why-is-kubernetes-so-complicated},
  urldate = {2025-04-03},
  author  = {appvia},
  month   = feb,
  year    = {2024}
}

@misc{noauthor_event_2024,
  title    = {The event loop - {JavaScript} {\textbar} {MDN}},
  url      = {https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop},
  abstract = {JavaScript has a runtime model based on an event loop, which is responsible for executing the code, collecting and processing events, and executing queued sub-tasks. This model is quite different from models in other languages like C and Java.},
  language = {en-US},
  month    = oct,
  year     = {2024},
  note     = {Available at \url{https://developer.mozilla.org/en-US/docs/Web/JavaScript/Event_loop}}
}

@misc{noauthor_hitchhikers_nodate,
  title    = {The {Hitchhiker}'s {Guide} to {Concurrency} {\textbar} {Learn} {You} {Some} {Erlang} for {Great} {Good}!},
  url      = {https://learnyousomeerlang.com/the-hitchhikers-guide-to-concurrency},
  abstract = {The basic concepts behind Erlang's message passing architecture for writing fault-tolerant systems. How to spawn new processes, send and receive messages and a few examples.}
}

@misc{casey_how_nodate,
  title    = {How to explain {Kubernetes} in plain {English} {\textbar} {The} {Enterprisers} {Project}},
  url      = {https://enterprisersproject.com/article/2017/10/how-explain-kubernetes-plain-english},
  abstract = {How do you explain Kubernetes and orchestration to non-technical people? Listen to the experts.},
  language = {en},
  urldate  = {2025-04-03},
  author   = {Casey, Kevin}
}

@misc{noauthor_event-driven_nodate,
  title    = {Event-{Driven} {Architecture}},
  url      = {https://aws.amazon.com/event-driven-architecture/},
  abstract = {An event-driven architecture uses events to trigger and communicate between services. Learn more about its benefits, use cases, and getting started.},
  language = {en-US},
  urldate  = {2025-04-03},
  journal  = {Amazon Web Services, Inc.},
  author   = {Amazon Web Services Inc.}
}


@misc{noauthor_managing_nodate,
  title   = {Managing data consistency in a microservice architecture using {Sagas} part 2 - coordinating sagas},
  url     = {https://microservices.io/post/sagas/2019/08/04/developing-sagas-part-2.html},
  urldate = {2025-04-03},
  author  = {Richardson, Chris}
}


@misc{noauthor_microservices_nodate,
  title      = {Microservices {Pattern}: {Pattern}: {Saga}},
  shorttitle = {Microservices {Pattern}},
  url        = {http://microservices.io/patterns/data/saga.html},
  abstract   = {Implement transactions using a saga, which is sequence of local transactions},
  urldate    = {2025-04-03},
  journal    = {microservices.io},
  author     = {Richardson, Chris}
}

@misc{noauthor_saga_nodate,
  title    = {Saga {Orchestration} for {Microservices} {Using} the {Outbox} {Pattern}},
  url      = {https://www.infoq.com/articles/saga-orchestration-outbox/},
  abstract = {The outbox pattern, implemented via change data capture, is a proven approach for addressing the concern of data exchange between microservices. The saga pattern, as demonstrated in this article, is useful for data updates that span multiple microservices.},
  language = {en},
  urldate  = {2025-04-03},
  journal  = {InfoQ},
  author   = {Morling, Gunnar},
  year     = {2021},
  month    = feb
}


@misc{robbagby_microservice_nodate,
  title    = {Microservice architecture style - {Azure} {Architecture} {Center}},
  url      = {https://learn.microsoft.com/en-us/azure/architecture/guide/architecture-styles/microservices},
  abstract = {Read about the benefits, challenges, and best practices of the microservices architecture style on Azure.},
  language = {en-us},
  urldate  = {2025-04-03},
  author   = {{RobBagby}}
}


@misc{cubet_microservice_nodate,
  title    = {Microservice v/s {Pool} {Architecture} for {SaaS} {Applications}},
  url      = {https://cubettech.com/resources/blog/microservice-v-s-pool-architecture-for-saa-s-applications/},
  abstract = {SaaS transformed business operations by offering an alternative to traditional on-premise software. Explore the essentials of Microservice and Pool architecture in SaaS},
  language = {en},
  urldate  = {2025-04-03},
  journal  = {Cubet},
  author   = {{Cubet}}
}


@misc{ogrady_post-valkey_2024,
  title    = {The {Post}-{Valkey} {World}},
  url      = {https://redmonk.com/sogrady/2024/07/16/post-valkey-world/},
  abstract = {Six years ago in August, Redis – then known as Redis Labs – applied a new license called the Commons Clause to a set of modules, or extensions to the core Redis database. The practical import of this clause was to override the existing open source license to render the software effectively proprietary and source},
  language = {en-US},
  urldate  = {2025-04-03},
  journal  = {tecosystems},
  author   = {O'Grady, Stephen},
  month    = jul,
  year     = {2024}
}

@misc{James_cyber_perm,
  title   = {Why does my Cyberpunk run so badly? An enthusiast‘s guide to optimization},
  url     = {https://expertbeacon.com/why-does-my-cyberpunk-run-so-bad/},
  author  = {Dorn, James},
  journal = {Expert Beacon},
  year    = {2024},
  month   = may
}

@misc{noauthor_cyberpunk_nodate,
  title      = {Cyberpunk 2077 :: {Steam} {Community}},
  shorttitle = {Cyberpunk 2077},
  note       = {Available at \url{https://steamcommunity.com/app/1091500/discussions/7/4428814589383884489/}},
  language   = {en},
  urldate    = {2025-04-03},
  author     = {{Steam} {Community}}
}


@misc{carpenter_cyberpunk_2020,
  title    = {Cyberpunk 2077 sequences may cause seizures, developer patches in new warning},
  url      = {https://www.polygon.com/2020/12/8/22163153/cyberpunk-2077-accessibility-epilepsy-seizure-warning},
  abstract = {Gaming website Game Informer published an important PSA},
  language = {en-US},
  urldate  = {2025-04-03},
  journal  = {Polygon},
  author   = {Carpenter, Nicole},
  month    = dec,
  year     = {2020}
}


@misc{noauthor_bcs_nodate,
  title    = {{BCS} {Code} of {Conduct} for members - {Ethics} for {IT} professionals {\textbar} {BCS}},
  url      = {https://www.bcs.org/membership-and-registrations/become-a-member/bcs-code-of-conduct},
  abstract = {The BCS Code of Conduct defines the characteristics we share as IT professionals serious about building an ethical and responsible computing profession.},
  urldate  = {2025-04-03},
  author   = {The British Computer Society}
}


@misc{noauthor_news_nodate,
  title    = {News log - {Gleam}},
  note     = {Available at \url{https://gleam.run//news/}},
  abstract = {The Gleam programming language},
  language = {en-GB},
  urldate  = {2025-04-03},
  author   = {Pilfold, Louis}
}


@misc{shashtari_why_2024,
  title    = {Why the number of {Gleam} programmers is growing so fast?},
  url      = {https://tahazsh.com/blog/why-gleam-is-good},
  abstract = {Gleam is a beautiful language. Read this if you are unsure about learning it.},
  language = {en},
  urldate  = {2025-04-03},
  journal  = {Taha Shashtari},
  author   = {Shashtari, Taha},
  month    = mar,
  year     = {2024}
}


@misc{noauthor_gleam_nodate,
  title    = {Gleam {Language}},
  note     = {Available at \url{https://gleam.run//}},
  abstract = {The Gleam programming language},
  language = {en-GB},
  urldate  = {2025-04-03},
  author   = {Pilfold, Louis}
}



@misc{pandey_peer--peer_2022,
  title    = {Peer-to-peer vs client-server architecture for multiplayer games},
  author   = {Pandey, Harsh},
  url      = {https://blog.hathora.dev/peer-to-peer-vs-client-server-architecture/},
  abstract = {An important decision developers have to decide up front when developing a multiplayer game is whether to use a peer-to-peer architecture or a client-server architecture.},
  language = {en},
  journal  = {Hathora},
  month    = may,
  year     = {2022},
  note     = {Available at \url{https://blog.hathora.dev/peer-to-peer-vs-client-server-architecture/} }
}





@misc{noauthor_houdini_nodate,
  title    = {houdini · v1.1.0},
  note     = {Available at \url{https://hexdocs.pm/houdini/}},
  abstract = {🪄 Fast HTML escaping},
  urldate  = {2025-04-03},
  author   = {{Pilfold, Louis}, {Cavalieri, Giacomo} and yoshi}
}



@misc{olano_gleam_2025,
  title    = {Gleam, coming from {Erlang}},
  url      = {https://olano.dev/blog/gleam-coming-from-erlang},
  abstract = {I recently took some time to try Gleam, the type-safe language that runs on the Erlang virtual machine. For a couple of weeks, I used it to build a little feed aggregator. These are my notes.},
  urldate  = {2025-04-03},
  journal  = {olano.dev},
  author   = {Olano, Facundo},
  month    = feb,
  year     = {2025}
}



@misc{peinhardt_bcpeinhardt/learn_otp_with_gleam_2025,
  title    = {bcpeinhardt/learn\_otp\_with\_gleam},
  url      = {https://github.com/bcpeinhardt/learn_otp_with_gleam},
  abstract = {A resource for learning the OTP framework with the Gleam programming language},
  urldate  = {2025-04-03},
  author   = {Peinhardt, Benjamin},
  month    = mar,
  year     = {2025},
  note     = {original-date: 2024-02-23T22:04:58Z}
}


@misc{noauthor_gleam/otp/static_supervisor_nodate,
  title   = {gleam/otp/static\_supervisor · gleam\_otp · v0.16.1},
  url     = {https://hexdocs.pm/gleam_otp/gleam/otp/static_supervisor.html},
  urldate = {2025-04-03},
  author  = {{Pilfold, Louis}, {Cavalieri, Giacomo} and Gears}
}

@misc{noauthor_gleam/otp/supervisor_nodate,
  title   = {gleam/otp/supervisor · gleam\_otp · v0.16.1},
  url     = {https://hexdocs.pm/gleam_otp/gleam/otp/supervisor.html},
  urldate = {2025-04-03},
  author  = {{Pilfold, Louis}, {Cavalieri, Giacomo} and Gears}
}


@misc{noauthor_supervisor_nodate,
  title   = {Supervisor {Behaviour} — {Erlang} {System} {Documentation} v27.3.1},
  url     = {https://www.erlang.org/doc/system/sup_princ.html},
  urldate = {2025-04-03},
  author  = {Ericsson AB}
}

@misc{noauthor_callback_nodate,
  title  = {Callback {Hell}},
  url    = {http://callbackhell.com/},
  author = {Callback Hell site},
  note   = {Available at \url{http://callbackhell.com/}}
}

@misc{noauthor_scale_nodate,
  title    = {Scale with {Redis} {Cluster}},
  url      = {https://redis.io/docs/latest/operate/oss_and_stack/management/scaling/},
  abstract = {Horizontal scaling with Redis Cluster},
  language = {en},
  note     = {Available at \url{https://redis.io/docs/latest/operate/oss_and_stack/management/scaling/}},
  author   = {Redis}
}


@misc{noauthor_gleam-otp-design-principals/gleam-otp-design-principals.org_nodate,
  title    = {gleam-otp-design-principals/gleam-otp-design-principals.org at main · wmealing/gleam-otp-design-principals},
  url      = {https://github.com/wmealing/gleam-otp-design-principals/blob/main/gleam-otp-design-principals.org},
  abstract = {Gleam OTP Design Principles User's Guide. Contribute to wmealing/gleam-otp-design-principals development by creating an account on GitHub.},
  language = {en},
  urldate  = {2025-04-03},
  journal  = {GitHub},
  author   = {Mealing, Wade}
}


@misc{franchetti_coping_2020,
  title    = {Coping with quarantine by coding},
  url      = {https://jofranchetti.medium.com/coping-with-quarantine-by-coding-597372a17746},
  abstract = {Building web games to bring my remote friends together},
  language = {en},
  journal  = {Medium},
  author   = {Franchetti, Jo},
  month    = sep,
  year     = {2020},
  note     = {Available at \url{https://jofranchetti.medium.com/coping-with-quarantine-by-coding-597372a17746}}
}

@article{reis_fun_2017,
  title    = {Fun is more fun when others are involved},
  volume   = {12},
  issn     = {1743-9760, 1743-9779},
  url      = {https://www.tandfonline.com/doi/full/10.1080/17439760.2016.1221123},
  doi      = {10.1080/17439760.2016.1221123},
  language = {en},
  number   = {6},
  journal  = {The Journal of Positive Psychology},
  author   = {Reis, Harry T. and O’Keefe, Stephanie D. and Lane, Richard D.},
  month    = nov,
  year     = {2017},
  pages    = {547--557}
}


@article{garaigordobil_developing_2022,
  title      = {Developing {Children}’s {Creativity} and {Social}-{Emotional} {Competencies} through {Play}: {Summary} of {Twenty} {Years} of {Findings} of the {Evidence}-{Based} {Interventions} “{Game} {Program}”},
  volume     = {10},
  copyright  = {https://creativecommons.org/licenses/by/4.0/},
  issn       = {2079-3200},
  shorttitle = {Developing {Children}’s {Creativity} and {Social}-{Emotional} {Competencies} through {Play}},
  url        = {https://www.mdpi.com/2079-3200/10/4/77},
  doi        = {10.3390/jintelligence10040077},
  abstract   = {This work presents the results of four cooperative-creative game programs (Game Programs). In all four studies, experimental designs with repeated pretest-posttest measures and control groups were used. Validation samples ranged from 86 to 178 participants, randomly assigning participants to the experimental and control conditions. Before and after each program, a battery of assessment instruments was applied to measure the variables under study. The intervention consists of conducting a weekly game session during the school year. The results of the posttest covariance analyses confirmed a significant impact: (1) in social development, by increasing various positive social behaviors and decreasing many negative social behaviors; by increasing assertive cognitive strategies and prosocial resolution of interpersonal problems; and by enhancing relationships and positive communication among group members; (2) in emotional development, by improving self-concept, peer image, and emotional stability; and (3) in cognitive development, by increasing verbal intelligence, verbal and graphic-figurative creativity, as well as creative personality behaviors and traits. This work provides empirical evidence of the relevance of cooperative-creative play in child development.},
  language   = {en},
  number     = {4},
  journal    = {Journal of Intelligence},
  author     = {Garaigordobil, Maite and Berrueco, Laura and Celume, Macarena-Paz},
  month      = oct,
  year       = {2022},
  pages      = {77}
}



@misc{debenedetto_elixir_2019,
  title      = {Elixir and {The} {Beam}: {How} {Concurrency} {Really} {Works}},
  shorttitle = {Elixir and {The} {Beam}},
  url        = {https://medium.com/flatiron-labs/elixir-and-the-beam-how-concurrency-really-works-3cc151cddd61},
  abstract   = {What actually makes Elixir concurrent? To find out, we need to understand OTP and the Erlang VM.},
  language   = {en},
  journal    = {Flatiron Labs},
  author     = {DeBenedetto, Sophie},
  month      = dec,
  year       = {2019},
  note       = {Available at \url{https://medium.com/flatiron-labs/elixir-and-the-beam-how-concurrency-really-works-3cc151cddd61}}
}

@book{stenman_erlang_2024,
  author = {Stenman, Erik},
  title  = {The {Erlang} {Runtime} {System}},
  url    = {https://blog.stenmans.org/theBeamBook/#CH-Processes},
  year   = {2024},
  note   = {Available at \url{https://blog.stenmans.org/theBeamBook/#CH-Processes}}
}

@article{armstrong_making_2003,
  title    = {Making reliable distributed systems in the presence of software errors},
  url      = {https://urn.kb.se/resolve?urn=urn:nbn:se:ri:diva-22455},
  abstract = {The work described in this thesis is the result of a research program started in 1981 to find better ways of programming Telecom applications. These applications are large programs which despite ca ...},
  language = {eng},
  author   = {Armstrong, Joe},
  year     = {2003}
}

@thesis{berladean_effect_2016,
  author = {Berladean, Vadim},
  title  = {The effect of multiplayer mode on users’ immersion and enjoyment in mobile games},
  school = {Aalborg Universitet},
  year   = 2016
}



@misc{noauthor_cap_nodate,
  title    = {{CAP} {Theorem} \& {Strategies} for {Distributed} {Systems}},
  url      = {https://www.splunk.com/en_us/blog/learn/cap-theorem.html},
  abstract = {Often misunderstood, the CAP Theorem is important to get right. Learn what the CAP theorem really is about, so your distributed systems stay resilient.},
  language = {en},
  urldate  = {2025-04-03},
  journal  = {Splunk},
  author   = {Wickramasinghe, Shanika},
  year     = {2024},
  month    = apr
}



@inproceedings{sredojev_webrtc_2015,
  title     = {{WebRTC} technology overview and signaling solution design and implementation},
  url       = {https://ieeexplore.ieee.org/document/7160422},
  doi       = {10.1109/MIPRO.2015.7160422},
  abstract  = {This paper describes the WebRTC technology and implementation of WebRTC client, server and signaling. Main parts of the WebRTC API are described and explained. Signaling methods and protocols are not specified by the WebRTC standards, therefore in this study we design and implement a novel signaling mechanism. The corresponding message sequence chart of the WebRTC communication behavior describes a communication flow between peers and the server. The server application is implemented as a WebSocket server. The client application demonstrates the use of the WebRTC API for achieving real-time communication. Benefits and future development of the WebRTC technology are mentioned.},
  urldate   = {2025-04-03},
  booktitle = {2015 38th {International} {Convention} on {Information} and {Communication} {Technology}, {Electronics} and {Microelectronics} ({MIPRO})},
  author    = {Sredojev, Branislav and Samardzija, Dragan and Posarac, Dragan},
  month     = may,
  year      = {2015},
  keywords  = {WebRTC, Servers, Media, Peer-to-peer computing, Ice, Protocols, Browsers},
  pages     = {1006--1009}
}


@article{gupta_overview_2018,
  title    = {An Overview of Web Sockets: The future of Real-Time Communication},
  volume   = {5},
  issn     = {2395-0056, 2395-0072},
  url      = {https://www.irjet.net/archives/V5/i12/IRJET-V5I1283.pdf},
  language = {en},
  number   = {12},
  journal  = {International Research Journal of Engineering and Technology (IRJET)},
  author   = {Gupta, Bhumij and Dr. Vani, M.P. },
  month    = dec,
  year     = {2018},
  pages    = {434--437}
}


@article{Ari_crss_nodate,
  author = {Ari, Ismail and Hong, Bo and Miller, Ethan L. and Brandt, Scott A. and Long, Darrell D. E.},
  title  = {{CRSS} publication: {Managing} flash crowds on the {Internet}},
  url    = {https://www.ssrc.us/Papers/ari-mascots03.pdf},
  note   = {Available at \url{https://web.archive.org/web/20130509180859/http://www.ssrc.ucsc.edu/Papers/ari-mascots03.pdf}}
}


@misc{jobert_story_2017,
  title    = {Story of a {Reddit} {Hug} of {Death} and {Lessons} {Learned}},
  url      = {https://medium.com/codingame/story-of-a-reddit-hug-of-death-and-lessons-learned-3565bb8a6793},
  abstract = {Last Monday afternoon, a link to CodinGame was posted on reddit. It gained a lot of success and resulted in what is called a hug of death…},
  language = {en},
  journal  = {CodinGame},
  author   = {Jobert, Thibaud},
  month    = nov,
  year     = {2017}
}


@misc{noauthor_chapter_2024,
  title      = {Chapter 3. {Designing} function signatures and types · {Functional} {Programming} in {C}\#: {How} to write better {C}\# code},
  shorttitle = {Chapter 3. {Designing} function signatures and types · {Functional} {Programming} in {C}\#},
  url        = {https://livebook.manning.com/book/functional-programming-in-c-sharp/chapter-3},
  abstract   = {Well-designed function signatures · Fine-grained control over the inputs to a function · Using Option to represent the possible absence of data},
  language   = {en-US},
  author     = {Manning Publications Co.},
  year       = {2024}
}

@misc{Wlaschin_functional_2014,
  title  = {Functional Programming Patterns (NDC London 2014) },
  author = { Wlaschin, Scott},
  note   = {Slides for the talk are available at \url{https://fsharpforfunandprofit.com/fppatterns/}},
  year   = {2014}
}


@inproceedings{politowski_survey_2021,
  address   = {Madrid, Spain},
  title     = {A {Survey} of {Video} {Game} {Testing}},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn      = {9781665435673},
  url       = {https://ieeexplore.ieee.org/document/9463010/},
  doi       = {10.1109/AST52587.2021.00018},
  booktitle = {2021 {IEEE}/{ACM} {International} {Conference} on {Automation} of {Software} {Test} ({AST})},
  publisher = {IEEE},
  author    = {Politowski, Cristiano and Petrillo, Fabio and Gueheneuc, Yann-Gael},
  month     = may,
  year      = {2021},
  pages     = {90--99}
}

@misc{noauthor_chrobot_nodate,
  title    = {chrobot · v3.0.3 - A browser automation tool and interface to the Chrome DevTools Protocol.},
  url      = {https://hexdocs.pm/chrobot/},
  abstract = {A browser automation tool and interface to the Chrome DevTools Protocol.},
  note     = {\url{https://hexdocs.pm/chrobot/}},
  author   = {Gruenwald, Jonas}
}

@misc{noauthor_htmx_ws_nodate,
  title    = {{\textless}/{\textgreater} htmx {\textasciitilde} {The} htmx {Web} {Socket} extension {Extension}},
  url      = {https://htmx.org/extensions/ws/},
  abstract = {htmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext
              
              htmx is small ({\textasciitilde}14k min.gz’d), dependency-free, extendable, IE11 compatible \& has reduced code base sizes by 67\% when compared with react},
  author   = {htmx},
  note     = {Available at \url{https://htmx.org/extensions/ws/}}
}

@misc{noauthor_htmx_nodate,
  title    = {{\textless}/{\textgreater} htmx - high power tools for html},
  url      = {https://htmx.org/},
  abstract = {htmx gives you access to AJAX, CSS Transitions, WebSockets and Server Sent Events directly in HTML, using attributes, so you can build modern user interfaces with the simplicity and power of hypertext
              
              htmx is small ({\textasciitilde}14k min.gz’d), dependency-free, extendable, IE11 compatible \& has reduced code base sizes by 67\% when compared with react},
  author   = {htmx},
  note     = {Available at \url{https://htmx.org/}}
}


@misc{yang_c_nodate,
  title    = {C, {Erlang}, {Java} and {Go} {Web} {Server} performance test – by {Tim} {Yang}},
  url      = {https://timyang.net/programming/c-erlang-java-performance/},
  abstract = {I had tested a hello world web server in C, Erlang, Java and the Go programming language. * C, use the well-known high performance web server nginx, with a hello world nginx module * Erlang/OTP * Java, using the MINA 2.0 framework, now the JBoss Netty framework. * Go, http://golang.org/},
  language = {en-US},
  author   = {Yang, Tim}
}








@inproceedings{lange_empirical_2019,
  address   = {Hangzhou, China},
  title     = {An {Empirical} {Study} of {Messaging} {Passing} {Concurrency} in {Go} {Projects}},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  isbn      = {9781728105918},
  url       = {https://ieeexplore.ieee.org/document/8668036/},
  doi       = {10.1109/SANER.2019.8668036},
  booktitle = {2019 {IEEE} 26th {International} {Conference} on {Software} {Analysis}, {Evolution} and {Reengineering} ({SANER})},
  publisher = {IEEE},
  author    = {Lange, Julien and Dilley, Nicolas },
  month     = feb,
  year      = {2019},
  pages     = {377--387}
}


@article{bianchi_survey_2018,
  title     = {A {Survey} of {Recent} {Trends} in {Testing} {Concurrent} {Software} {Systems}},
  volume    = {44},
  copyright = {https://ieeexplore.ieee.org/Xplorehelp/downloads/license-information/IEEE.html},
  issn      = {0098-5589, 1939-3520, 2326-3881},
  url       = {https://ieeexplore.ieee.org/document/7932530/},
  doi       = {10.1109/TSE.2017.2707089},
  abstract  = {Many modern software systems are composed of multiple execution flows that run simultaneously, spanning from applications designed to exploit the power of modern multi-core architectures to distributed systems consisting of multiple components deployed on different physical nodes. We collectively refer to such systems as concurrent systems. Concurrent systems are difficult to test, since the faults that derive from their concurrent nature depend on the interleavings of the actions performed by the individual execution flows. Testing techniques that target these faults must take into account the concurrency aspects of the systems. The increasingly rapid spread of parallel and distributed architectures led to a deluge of concurrent software systems, and the explosion of testing techniques for such systems in the last decade. The current lack of a comprehensive classification, analysis and comparison of the many testing techniques for concurrent systems limits the understanding of the strengths and weaknesses of each approach and hampers the future advancements in the field. This survey provides a framework to capture the key features of the available techniques to test concurrent software systems, identifies a set of classification criteria to review and compare the available techniques, and discusses in details their strengths and weaknesses, leading to a thorough assessment of the field and paving the road for future progresses.},
  number    = {8},
  journal   = {IEEE Transactions on Software Engineering},
  author    = {Bianchi, Francesco Adalberto and Margara, Alessandro and Pezze, Mauro},
  month     = aug,
  year      = {2018},
  pages     = {747--783}
}


@misc{noauthor_isteamnetworkingsockets_nodate,
  title    = {{ISteamNetworkingSockets} {Interface} ({Steamworks} {Documentation})},
  url      = {https://partner.steamgames.com/doc/api/ISteamnetworkingSockets},
  language = {en},
  note     = {Available at \url{https://partner.steamgames.com/doc/api/ISteamnetworkingSockets}},
  author   = {SteamWorks}
}

@misc{djundik_how_2017,
  title     = {How and why we moved graph storage to InfluxDB},
  author    = {Djundik, Pavel},
  note      = {Available at \url{https://steamdb.info/blog/graph-storage-influxdb/}},
  year      = {2017},
  month     = feb,
  publisher = {SteamDB}
}


@misc{simmons_decoding_2023,
  title    = {Decoding the {Programming} {Language} of {Steam}},
  url      = {https://stepofweb.com/steamcodinglanguage/},
  abstract = {Steam, the popular digital distribution platform for video games, primarily uses a combination of coding languages to power its functionality. The backend of Steam is built using a blend of...},
  language = {en-US},
  journal  = {Stepofweb},
  month    = nov,
  year     = {2024},
  author   = {Simmons, James}
}


@misc{erri120_erri120_egs-db_2024,
  title     = {erri120/egs-db},
  copyright = {EUPL-1.2},
  url       = {https://github.com/erri120/egs-db},
  abstract  = {Database for the Epic Games Store (similar to SteamDB and the GOG Database)},
  urldate   = {2024-12-10},
  author    = {{erri120}},
  month     = apr,
  year      = {2024},
  note      = {original-date: 2023-04-30T16:15:11Z},
  keywords  = {database, epic-games-store}
}


@misc{epic_games_jobs,
  title = {Careers at Epic Games},
  url   = {https://www.epicgames.com/site/en-US/careers/jobs?department=Engineering&product=Epic%20Online%20Services&page=1},
  note  = {Available at \url{https://www.epicgames.com/site/en-US/careers/jobs?department=Engineering&product=Epic%20Online%20Services&page=1}}
}

@misc{epic_games_dev_update,
  title = {Development Update: Self-Refund, Keyless Partner Integration and Changes to Ownership Authorization},
  url   = {https://store.epicgames.com/en-US/news/development-update-self-refund-keyless-partner-integration-and-changes-to-ownership-authorization},
  note  = {Available at \url{https://store.epicgames.com/en-US/news/development-update-self-refund-keyless-partner-integration-and-changes-to-ownership-authorization}},
  year  = {2020},
  month = may
}


@misc{spring_epic_2016,
  title    = {Epic {Games} {Forums} {Hacked}, {SQL} {Injection} {Vulnerability} {Blamed}},
  url      = {https://threatpost.com/epic-games-forums-hacked-sql-injection-vulnerability-blamed/120076/},
  abstract = {A SQL injection vulnerability is being blamed in the hack of 800,000 users accounts for popular gaming forums run by Epic Games.},
  language = {en},
  month    = aug,
  year     = {2016},
  author   = {Tom Spring}
}





@article{namiot_js_2015,
  title   = {JavaScript Concurrency Models},
  url     = {https://www.researchgate.net/publication/277142025_JavaScript_Concurrency_Models},
  author  = {Namiot, Dmitry and Sukhomlin, Vladimir},
  month   = jan,
  year    = {2015},
  journal = {International Journal of Open Information Technologies ISSN: 2307-8162 vol. 3, no. 6, 2015 },
  pages   = {21--24}
}


@inproceedings{zhao_concurrency_2021,
  address   = {New York, NY, USA},
  series    = {{SLE} 2021},
  title     = {A concurrency model for {JavaScript} with cooperative cancellation},
  isbn      = {9781450391115},
  url       = {https://dl.acm.org/doi/10.1145/3486608.3486911},
  doi       = {10.1145/3486608.3486911},
  abstract  = {This paper proposes a concurrency model for JavaScript with thread-like abstractions and cooperative cancellation. JavaScript uses an event-driven model, where an active computation runs until it completes or blocks for an event while concurrent computations wait for other events as callbacks. With the introduction of Promises, the control flow of callbacks can be written in a more direct style. However, the event-based model is still a source of confusion with regard to execution order, race conditions, and termination.  The thread model is a familiar concept to programmers and can help reduce concurrency errors in JavaScript programs. This work is a library-based design, which uses an abstraction based on the reader monad to pass a thread ID through a thread's computation. A thread can be cancelled, paused, and resumed with its thread ID. This design allows hierarchical cancellation where a child thread is cancelled if its parent is cancelled. It also defines synchronization primitives to protect shared states. A formal semantics is included to give a precise definition of the proposed model.},
  booktitle = {Proceedings of the 14th {ACM} {SIGPLAN} {International} {Conference} on {Software} {Language} {Engineering}},
  publisher = {Association for Computing Machinery},
  author    = {Zhao, Tian and Li, Yonglun},
  month     = nov,
  year      = {2021},
  pages     = {55--67}
}


@article{belson_survey_2019,
  title     = {A {Survey} of {Asynchronous} {Programming} {Using} {Coroutines} in the {Internet} of {Things} and {Embedded} {Systems}},
  copyright = {arXiv.org perpetual, non-exclusive license},
  url       = {https://arxiv.org/abs/1906.00367},
  doi       = {10.48550/ARXIV.1906.00367},
  abstract  = {Many Internet of Things and embedded projects are event-driven, and therefore require asynchronous and concurrent programming. Current proposals for C++20 suggest that coroutines will have native language support. It is timely to survey the current use of coroutines in embedded systems development. This paper investigates existing research which uses or describes coroutines on resource-constrained platforms. The existing research is analysed with regard to: software platform, hardware platform and capacity; use cases and intended benefits; and the application programming interface design used for coroutines. A systematic mapping study was performed, to select studies published between 2007 and 2018 which contained original research into the application of coroutines on resource-constrained platforms. An initial set of 566 candidate papers were reduced to only 35 after filters were applied, revealing the following taxonomy. The C \&amp; C++ programming languages were used by 22 studies out of 35. As regards hardware, 16 studies used 8- or 16-bit processors while 13 used 32-bit processors. The four most common use cases were concurrency (17 papers), network communication (15), sensor readings (9) and data flow (7). The leading intended benefits were code style and simplicity (12 papers), scheduling (9) and efficiency (8). A wide variety of techniques have been used to implement coroutines, including native macros, additional tool chain steps, new language features and non-portable assembly language. We conclude that there is widespread demand for coroutines on resource-constrained devices. Our findings suggest that there is significant demand for a formalised, stable, well-supported implementation of coroutines in C++, designed with consideration of the special needs of resource-constrained devices, and further that such an implementation would bring benefits specific to such devices.},
  author    = {Belson, Bruce and Holdsworth, Jason and Xiang, Wei and Philippa, Bronson},
  year      = {2019},
  keywords  = {Software Engineering (cs.SE), Programming Languages (cs.PL), FOS: Computer and information sciences, FOS: Computer and information sciences}
}
